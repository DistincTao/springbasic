<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- 이곳은 Dispatche Servlet 이다. -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- annotation 방식으로 처리를 한다 -->
	<annotation-driven /> 

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 아래의 resources는 webapp/resources에서 외부 파일을 불러올 수있게 해줌 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- Controller 단을 실행하고, response를 처리할 때 반환될 view 객체를 찾는다. -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- component를 scan. 아래의 base-package를 스캔하여 객체를 확보 -->
	<context:component-scan base-package="com.springbasic.controller/" />
<!-- 	<context:component-scan base-package="com.springbasic.persistence" /> -->

	
		
</beans:beans>

